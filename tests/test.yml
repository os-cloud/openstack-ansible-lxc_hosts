---
# Copyright 2015, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Playbook for role testing
  hosts: localhost
  connection: local
  pre_tasks:
    - name: Show host facts
      debug:
        var: hostvars
    - name: First ensure apt cache is always refreshed
      apt:
        update_cache: yes
      when:
        - ansible_pkg_mgr == 'apt'
    - name: Ensure root ssh key
      user:
        name: "{{ ansible_env.USER | default('root') }}"
        generate_ssh_key: "yes"
        ssh_key_bits: 2048
        ssh_key_file: ".ssh/id_rsa"
    - name: get the calling users key
      command: cat ~/.ssh/id_rsa.pub
      register: key_get
    - set_fact:
        lxc_container_ssh_key: key_get.stdout
  roles:
    - role: "{{ rolename | basename }}"
      lxc_net_address: 10.100.100.1
      lxc_net_bridge: lxcbr0
      lxc_kernel_options:
        - { key: 'fs.inotify.max_user_instances', value: 1024 }
      lxc_container_caches:
        - url: "https://rpc-repo.rackspace.com/container_images/rpc-trusty-container.tgz"
          name: "trusty.tgz"
          sha256sum: "56c6a6e132ea7d10be2f3e8104f47136ccf408b30e362133f0dc4a0a9adb4d0c"
          chroot_path: trusty/rootfs-amd64
      lxc_container_cache_files:
        - src: files/container-file-copy-test.txt
          dest: /tmp/file-copied-from-deployment-host.txt
  post_tasks:
    - name: Open sysctl file
      slurp:
        src: /etc/sysctl.conf
      register: sysctl_file
    - name: Read files
      set_fact:
        sysctl_content: "{{ sysctl_file.content | b64decode }}"
    - name: Check for lxc bridge
      stat:
        path: /sys/class/net/lxcbr0/bridge/bridge_id
      register: lxc_bridge_file
    - name: Check dnsmasq is running
      shell: ps auxfww | grep -w 'dnsmasq -u lxc-dnsmasq'
    - name: DEBIAN - Get deployed interface file contents, without Ansible managed line
      shell: |
        cat /etc/network/interfaces.d/lxc-net-bridge.cfg | tail -n +3
      register: interface_file
      when: ansible_os_family | lower == "debian"
    - name: DEBIAN - Get expected interface file contents
      shell: |
        cat files/expected-lxc-net-bridge-debian.cfg
      register: expected_interface_file
      when: ansible_os_family | lower == "debian"
    - name: RHEL - Get deployed interface file contents, without Ansible managed line
      shell: |
        cat /etc/sysconfig/network-scripts/ifcfg-lxcbr0 | tail -n +3
      register: interface_file
      when: ansible_os_family | lower == "redhat"
    - name: RHEL - Get expected interface file contents
      shell: |
        cat files/expected-lxc-net-bridge-redhat.cfg
      register: expected_interface_file
      when: ansible_os_family | lower == "redhat"
    - name: Get bridge interface facts
      setup:
        filter: ansible_lxcbr0
      register: lxcbr0_facts
    - name: Check role functions
      assert:
        that:
          - "'fs.inotify.max_user_instances' in sysctl_content"
          - "lxc_bridge_file.stat.exists"
          - "interface_file.stdout | match(expected_interface_file.stdout)"
          - "lxcbr0_facts.ansible_facts.ansible_lxcbr0.ipv4.address | match('10.100.100.1')"
